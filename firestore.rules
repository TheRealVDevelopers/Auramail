rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profile documents live at /users/{uid}
    match /users/{uid} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow create, update: if request.auth != null && request.auth.uid == uid;
      allow delete: if false; // prevent accidental profile deletes

      // Nested emails subcollection: /users/{uid}/emails/{emailId}
      match /emails/{emailId} {
        // Owners can read their own emails
        allow read: if request.auth != null && request.auth.uid == uid;

        // Create rules - Allow authenticated users to create emails
        allow create: if request.auth != null;

        // Owners can update limited fields (move folders, mark read)
        allow update: if request.auth != null && request.auth.uid == uid
                       && request.resource.data.diff(resource.data).changedKeys().hasOnly(['read','folder']);

        // Prevent deletes in rules for safety; app can implement archive instead
        allow delete: if false;
      }
    }

    // Allow authenticated users to query users collection by email for email delivery
    match /users/{document=**} {
      allow list: if request.auth != null;
      allow read: if request.auth != null;
    }
  }
}

